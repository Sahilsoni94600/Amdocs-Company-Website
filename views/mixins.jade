//-
	Creates a list of words using ul and li
	from the given array,  giving  each  of
	them a class specified  when  the mixin
	is called.

mixin list(list)
	ul
		each val in list
			li(class!=attributes.class)
				a(href= val.link)= val.name

//-
	Creates the commonly used bar div and
	creates a container inside of it.

mixin bar()
	div.bar(class!=attributes.class)
		div.container
			if block
				block
			else
				+error("No content provided")

mixin sub-bar()
	div.sub-bar(class!=attributes.class)
		div.container
			if block
				block
			else
				+error("No content provided")

//-
	Creates a singular slide from the given
	information

mixin slide()
	div.slide(class!=attributes.class)
		if block
			block
		else
			+error("No content in slide")

mixin slider()
	div.slider(class!=attributes.class)
		if block
			block
		else
			+error("No slides given to slider")


mixin skill(skill, index)
	div.skillGroup
		div.languageContainer
			h5 #{skills[index].language}
		div.levelContainer
			div(class= skills[index].level).levelInner

mixin skillList(skills)
	each val, index in skills
		+skill(skills, index)

mixin title(x, y)
	div.title
		h1.sub.main #{x}
		h3.sub.subtitle  #{y}

mixin paragraph(x)
	.paragraph
		if x
			p #{x}
		else
			+error("No text specified for paragraph")

mixin icon(icon, subtitle, link)
	div.icon
		a.link(href= link)
			img.image(src= icon)
			h3.subtitle #{subtitle}

mixin clientIcon(icon, width, height)
	div.icon.clientIcon
		a.link(src= "/services")
			+image(icon, width, height)

mixin iconRow()
	div.iconRow
		div.iconRowContainer
			if block
				block
			else
				+error("Empty Icon Row.")

mixin tinyButton(link, text)
	a.tinyButton(href= link) #{text}

mixin error(e)
	p.error #{e}

mixin image(i, w, h)
	div.imageContainer(width= w, height= h)
		img.img(src= i, width= w, height= h)